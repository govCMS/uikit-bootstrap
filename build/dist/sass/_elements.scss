// Elements.
// Overwrites for elements that are part of Bootstrap

// Skip link:
.skiplink {
  background-color: $grey-dark;
  color: #fff;
}

// Abbreviations:
abbr {
  &,
  &[data-original-title],
  &[title] {
    text-decoration: none;     // Stop Chrome overriding
    // border-bottom: none;    // TODO: alternate for when many browsers support "text-decoration: underline dotted;"
  }
}

// Buttons:
.btn {
  border-radius: $radius;
  font-size: 17px;
  transition: all 0.16s;
}
.btn-default {
  // Can't use mixin here as its different pattern to the others - has a transparent bg, etc.
  background-color: transparent;
  border-color: $primary;
  color: $primary;
  &:active,
  &:focus,
  &:hover {
    background-color: $primary-dark;
    border-color: darken($primary-dark, 10%);
    color: #fff;
  }
  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &.focus,
    &:focus,
    &:hover {
      background-color: #fff;
      border-color: $primary;
      color: $primary;
    }
  }
}
.btn-primary {
  @include button-colours($primary-dark, #fff);
}
.btn-success {
  @include button-colours($success, #fff);
}
.btn-info {
  @include button-colours($info, $grey-dark);
}
.btn-warning {
  @include button-colours($warning, $grey-dark);
}
.btn-danger {
  @include button-colours($danger, #fff);
}
.btn-link {
  border-bottom: solid 1px $primary-bright;
  border-radius: 0;
  color: $grey-dark;
  transition: 0.1s all ease-in-out;
  &:not(:disabled) {
    &:active,
    &:focus,
    &:hover {
      background-color: $primary-bright;
      color: $grey-dark;
      text-decoration: none;
    }
  }
  &[disabled],
  fieldset[disabled] & {
    &:active,
    &:focus,
    &:hover {
      background-color: $grey-light;
      border-bottom-color: $grey-border;
    }
  }
}

// Labels:
.label {
  background-color: transparent;
  border: 1px solid $grey-border; // fallback for old browsers
  border-color: currentColor;
  border-radius: $radius;
  font-weight: $font-weight-normal;
}
.label-default {
  color: $grey;
}
.label-primary {
  color: $primary;
}
.label-success {
  color: $success;
}
.label-info {
  color: $info-dark;
}
.label-warning {
  color: $warning-dark;
}
.label-danger {
  color: $danger;
}
.label-alpha {
  color: $alpha;
}
.label-beta {
  color: $beta;
}
.label-hover {
  color: #fff;
  text-decoration: none !important;
}
a {
  &:active,
  &:focus,
  &:hover {
    .label {
      @extend .label-hover;
      &.label-default {
        @include button-colours($grey, #fff, 0);
      }

      &.label-primary {
        @include button-colours($primary, #fff, 0);
      }

      &.label-success {
        @include button-colours($success, #fff, 0);
      }

      &.label-info {
        @include button-colours($info-dark, #fff, 0);
      }

      &.label-warning {
        @include button-colours($warning-dark, #fff, 0);
      }

      &.label-danger {
        @include button-colours($danger, #fff, 0);
      }

      &.label-alpha {
        @include button-colours($alpha, #fff, 0);
      }

      &.label-beta {
        @include button-colours($beta, #fff, 0);
      }
    }
  }
  &.label {
    &:active,
    &:focus,
    &:hover {
      @extend .label-hover;
      &.label-default {
        @include button-colours($grey, #fff, 0);
      }
      &.label-primary {
        @include button-colours($primary, #fff, 0);
      }
      &.label-success {
        @include button-colours($success, #fff, 0);
      }
      &.label-info {
        @include button-colours($info-dark, #fff, 0);
      }
      &.label-warning {
        @include button-colours($warning-dark, #fff, 0);
      }
      &.label-danger {
        @include button-colours($danger, #fff, 0);
      }
      &.label-alpha {
        @include button-colours($alpha, #fff, 0);
      }
      &.label-beta {
        @include button-colours($beta, #fff, 0);
      }
    }
  }
}

// Progress bars:
.progress-bar {
  background-color: $beta; //  ¯\_(ツ)_/¯ ...I needed another colour
}
.progress-bar-default {
  background-color: $grey;
}
.progress-bar-primary {
  background-color: $primary;
}
.progress-bar-success {
  background-color: $success;
}
.progress-bar-info {
  background-color: $info;
}
.progress-bar-warning {
  background-color: $warning;
}
.progress-bar-danger {
  background-color: $danger;
}

// Badges:
.badge {
  background-color: $grey;
}

// Alert:
.alert {
  background: transparent;
  border: 0;
  border-radius: $radius-small;
  box-shadow: 0 0 8px $grey-border;
  color: $grey-dark;
  padding: 1.2em;
}
.alert-default {
  padding-left: 1.6em;
}
.alert-primary {
  border-left: 0.4em solid $primary;
}
.alert-success {
  border-left: 0.4em solid $success;
}
.alert-info {
  border-left: 0.4em solid $info;
}
.alert-warning {
  border-left: 0.4em solid $warning;
}
.alert-danger {
  border-left: 0.4em solid $danger;
}
.alert-calendar {
  border-left: 0.4em solid $primary;
  .calendar-date,
  .calendar-name {
    display: block;
    font-size: 32px;
    line-height: 1.2;
  }
  .calendar-date {
    font-weight: $font-weight-bold;
  }
}

// Basically the p tag equiv of .alert:
.text-muted {
  color: $grey;
}
.text-primary {
  color: $primary;
}
.text-success {
  color: $success;
}
.text-info {
  color: darken($info, 15%); // darker for a11y
}
.text-warning {
  color: $warning-dark; // darker to atempt a11y - but please, just don't use this
}
.text-danger {
  color: $danger;
}

// Jumbotrons and Wells:
.jumbotron,
.well {
  background-color: $grey-light;
  border: 0;
  border-radius: $radius-small;
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    &:first-child {
      margin-bottom: 0.8em;
      margin-top: 0;
    }

    &:last-child {
      margin-bottom: 0;
    }
  }
}
.container {
  .jumbotron {
    h1 {
      font-size: 230%;
    }
  }
}
.jumbotron {
  margin-bottom: 3em;
}

// Inline list of links:
.nav-pills,
.nav-tabs {
  border-bottom: 1px solid $grey;
  li {
    list-style: none;
    a {
      border: 0;
      border-bottom: solid 4px transparent;
      border-radius: 0;
      &:active,
      &:focus,
      &:hover {
        // background-color: $primary-highlight;   // it's just too much
        background-color: $primary-light;
        border-bottom: 4px solid $primary; // can't just do colour because of .nav-tabs
        // border-bottom-color: $primary;
        border-bottom-color: $primary-highlight;
      }
    }
    &.active {
      & > a {
        background-color: $primary-light;
        border: 0;
        border-bottom: 4px solid $primary; // can't just do colour because of .nav-tabs
        color: $primary;
        margin-right: 0;
        &:active,
        &:focus,
        &:hover {
          background-color: $primary-light;
          border: 0;
          border-bottom: 4px solid $primary; // can't just do colour because of .nav-tabs
          color: $primary;
        }
        .badge {
          background-color: $primary;
          color: #fff;
        }
      }
    }
    & + li {
      margin-left: 0;
    }
  }
}
.nav-tabs.nav-justified > li > a {
  border-radius: 0;
}

// Breadcrumbs:
.breadcrumb {
  background-color: transparent;
  padding: 10px 0;
  .active {
    color: $grey-dark;
  }
  li {
    margin-bottom: 2px;
    & + li:before {
      color: $grey;
      content: "\0203A";
      padding: 0 15px;
    }
  }
}

// Pagination:
.pager,
.pagination {
  & > li {
    & > a,
    & > span {
      background-color: #fff;
      border: 1px solid $grey-border;
      color: $primary;
      &:active,
      &:focus,
      &:hover {
        background-color: $grey-light;
        border: 1px solid $primary;
        // color: $grey-dark;
        color: $primary-dark;
      }
      &:active {
        background-color: $primary-bright;
        border-color: $grey;
        color: $grey-dark;
      }
    }
    &:first-child >  {
      a,
      span {
        border-bottom-left-radius: $radius-small;
        border-top-left-radius: $radius-small;
      }
    }
    &:last-child >  {
      a,
      span {
        border-bottom-right-radius: $radius-small;
        border-top-right-radius: $radius-small;
      }
    }
    &.active {
      a,
      span {
        background-color: $primary-dark;
        border-color: $primary-dark;
        &:active,
        &:focus,
        &:hover {
          background-color: $primary-dark;
          border-color: $primary-dark;
          color: #fff;
        }
      }
    }
    &.disabled {
      a,
      span {
        background-color: #fff;
        border-color: $grey-border;
        color: $grey;
      }
    }
  }
}
.pager {
  li {
    a,
    span {
      border-radius: $radius-small;
    }
  }
}

// Forms:
form {
  max-width: $max-readable-width;
  [type="email"],
  [type="number"],
  [type="password"],
  [type="tel"],
  [type="text"],
  input[type="checkbox"] select,
  input[type="radio"],
  optgroup,
  textarea {
    font: inherit;
    font-size: 17px;
    padding: 1.12em 0.7em;
    &:active,
    &:focus {
      outline: 2px solid $primary-bright;
    }
  }
  input[type="file"] {
    line-height: 0;
    margin-top: 10px;
  }
  label {
    color: #333;
    margin-bottom: 3px;
    margin-top: 6px;
  }
}
.help-block {
  color: $grey;
}
.has-success {
  label,
  &.checkbox label,
  &.checkbox-inline label,
  &.radio label,
  &.radio-inline label,
  .checkbox,
  .checkbox-inline,
  .control-label,
  .help-block,
  .radio,
  .radio-inline,
  .form-control-feedback {
    color: $success;
  }
  .form-control {
    border-color: $success;
  }
}
.has-warning {
  label,
  &.checkbox label,
  &.checkbox-inline label,
  &.radio label,
  &.radio-inline label,
  .checkbox,
  .checkbox-inline,
  .control-label,
  .help-block,
  .radio,
  .radio-inline,
  .form-control-feedback {
    color: $warning-dark;
  }
  .form-control {
    border-color: $warning-dark;
  }
}
.has-error {
  label,
  &.checkbox label,
  &.checkbox-inline label,
  &.radio label,
  &.radio-inline label,
  .checkbox,
  .checkbox-inline,
  .control-label,
  .help-block,
  .radio,
  .radio-inline,
  .form-control-feedback {
    color: $danger;
  }
  .form-control {
    border-color: $danger;
  }
}
.has-feedback label ~ .form-control-feedback {
  &.glyphicon {
    top: 2.3em;
  }
  &.fa {
    top: 2.75em;
  }
  // &.icon {
  //   top: 2.5em;
  // }
}
.form-control {
  border-radius: $radius-small;
  box-shadow: none;
  font-size: 17px;
}
// Disabled form elements:
.form-control:disabled,
fieldset[disabled] .form-control {
  background-color: $grey-light;
  color: $grey;
}
// More padding:
.checkbox,
.radio {
  margin-bottom: 15px;
  margin-top: 20px;
}
// More form styles:
.input-group-addon {
  border-radius: $radius;
}
.input-group-addon {
  background-color: $grey-light;
  border: 1px solid $grey-border;
  color: $grey;
}
.form-control {
  border: 1px solid $grey-border;
  color: $grey;
}
select.form-control {
  margin-bottom: 10px;
  min-height: 2.3em;
}
.input-group-btn {
  .btn {
    padding: 7px 15px;
  }
  &:last-child {
    & > .btn,
    & > .btn-group {
      border-radius: $radius-small;
    }
  }
}

// Checkbox align
.checkbox,
.checkbox-inline,
.radio,
.radio-inline {
  input {
    &[type="radio"],
    &[type="checkbox"] {
      margin-top: 6px;
    }
  }
}

// Large forms
.input-group-lg >  {
  .form-control,
  .input-group-addon,
  .input-group-btn > .btn {
    border-radius: $radius;
  }
}

// Form labels
label {
  width: 100%;
  .optional {
    color: $primary-dark;
    float: right;
    font-weight: 400;
  }
}

// Custom styled radio btns and checkboxes
// ...inspired by the UI-Kit version, but in my bias opinion, made better
//
// NOTE: requires "transform: rotate()" and ":before"/":after" support,
//       but really... ¯\_(ツ)_/¯
//       https://caniuse.com/#feat=transforms2d
//       thats <=IE8, which MS even disowned + Opera Mini, which the less used version of the least used browser :P
// Checkboxes:
.checkbox {
  input[type="checkbox"] {
    cursor: pointer;
    left: -12px;
    margin: 0 6px 0 -25px;
    position: relative;
    top: -8px;
    &:before {
      content: "";
      height: $checkbox-size;
      left: 0;
      position: absolute;
      transition: all 0.1s ease-out;
      width: $checkbox-size;
      z-index: 1;
    }
    &:checked:before {
      border: 4px solid #fff;
      border-right-style: none;
      border-top-style: none;
      height: 10px;
      left: 4px;
      top: 5px;
      transform: rotate(-45deg);
      width: 19px;
    }
    &:after {
      background: #fff;
      border: 2px solid $grey-dark;
      content: "";
      cursor: pointer;
      height: $checkbox-size;
      left: 0;
      position: absolute;
      top: -1px;
      width: $checkbox-size;
    }
    &:checked:after {
      background: $grey-dark;
      border-color: $grey-dark;
    }
  }
  input[type="checkbox"] {
    &:active,
    &:focus {
      outline: none;

      &:after,
      &:before {
        border-color: $primary-highlight;
      }
    }
  }
  input[type="checkbox"]:checked {
    &:active,
    &:focus {
      color: $primary;

      &:after {
        border-color: $grey-dark;
      }
    }
  }
  &:hover {
    input[type="checkbox"] {
      &:after {
        border-color: $primary;
      }
    }
  }
  label {
    cursor: pointer;
    line-height: 135%;
    margin: 0.5rem 0.5rem 0.5rem 1em;
    position: relative;
  }
  label {
    &:active,
    &:focus,
    &:hover {
      color: $primary-dark;
    }
  }
}
// Colour according to validation state colours:
.has-success {
  .checkbox {
    input:after {
      border-color: $success;
    }
  }
}
.has-warning {
  .checkbox {
    input:after {
      border-color: $warning-dark;
    }
  }
}
.has-error {
  .checkbox {
    input:after {
      border-color: $danger;
    }
  }
}
// Account for if fieldset is .disabled:
.checkbox.disabled,
fieldset:disabled .checkbox {
  cursor: not-allowed;
  label {
    color: $grey-border;
  }
  input:disabled {
    &:after,
    &:before {
      cursor: not-allowed;
    }
    &:after {
      background-color: $grey-light;
      border-color: $grey-border;
    }
  }
}
// Radio buttons:
.radio {
  input[type="radio"] {
    cursor: pointer;
    left: -11px;
    margin: 0 0 0 -19px;
    outline: none;
    outline: none;
    position: relative;
    top: -0.6rem;
    top: -9px;
    transition: all 0.1s ease;
    &:active,
    &:focus {
      outline: none;
    }
    &:before {
      border: 3px solid #fff;
      border-radius: 100%;
      content: "";
      height: $checkbox-size;
      height: 19px;
      left: 0;
      left: -3px;
      position: absolute;
      top: 4px;
      transform: scale(0);
      transition: all 0.16s ease;
      width: $checkbox-size;
      width: 19px;
      z-index: 1;
    }
    &:checked:before {
      transform: scale(1);
    }
    &:after {
      background: #fff;
      border: 2px solid $grey-dark;
      border-radius: 100%;
      content: "";
      cursor: pointer;
      height: $checkbox-size;
      left: -7px;
      position: absolute;
      width: $checkbox-size;
    }
    &:checked:after {
      background: $grey-dark;
      border-color: $grey-dark;
    }
  }
  input[type="radio"] {
    &:active,
    &:focus {
      &:after,
      &:before {
        border-color: $primary-highlight;
      }
    }
  }
  input[type="radio"]:checked {
    &:active,
    &:focus {
      &:after {
        border-color: $grey-dark;
      }
    }
  }
  &:hover {
    input[type="radio"] {
      &:after {
        border-color: $primary;
      }
    }
  }
  label {
    cursor: pointer;
    line-height: 135%;
    margin: 0.5rem 0.5rem 0.5rem 1em;
    position: relative;
  }
  &:active,
  &:focus,
  &:hover {
    label {
      color: $primary-dark;
    }
  }
}

// Account for if fieldset is .disabled:
.radio.disabled,
fieldset:disabled .radio {
  cursor: not-allowed;
  label {
    color: $grey-border;
  }
  input:disabled {
    &:after,
    &:before {
      cursor: not-allowed;
    }
    &:after {
      background-color: $grey-light;
      border-color: $grey-border;
    }
  }
}

// Dropdown menus (<select>)
select.form-control {
  -moz-appearance: none;
  -moz-box-sizing: border-box;
  -webkit-appearance: none;
  -webkit-box-sizing: border-box;
  background-image: linear-gradient(45deg, transparent 50%, $grey-dark 50%),
    linear-gradient(135deg, $grey-dark 50%, transparent 50%);
  // linear-gradient(to right, #ccc, #ccc); // divider
  background-position: calc(100% - 15px) calc(0.9em + 2px),
    calc(100% - 10px) calc(0.9em + 2px);
  // 1px 1.5em;  // divider
  background-repeat: no-repeat;
  // calc(100% - 2.5em) 0.5em;  // divider
  background-size: 6px 6px, 6px 6px;
  border-radius: $radius-small;
  box-sizing: border-box;
  color: $grey-dark;
  &:active,
  &:focus {
    background-image: linear-gradient(
        45deg,
        transparent 50%,
        $primary-highlight 50%
      ),
      linear-gradient(135deg, $primary-highlight 50%, transparent 50%);
    border-color: $primary-highlight;
  }
  &:hover {
    background-image: linear-gradient(45deg, transparent 50%, $primary 50%),
      linear-gradient(135deg, $primary 50%, transparent 50%);
    border-color: $primary;
  }
  // ...but not on multiselect list items.
  &[multiple] {
    background: none;
    option {
      margin: 0;
      padding: 0;
      &:active,
      &:checked,
      &:focus {
        box-shadow: inset 1000px 1000px $primary-highlight; // pushes the browsers bg-color out of site
        color: $grey-dark; // TODO: make this take effect in all situations
      }
    }
  }
  &:disabled {
    background-color: $grey-light;
    background-image: linear-gradient(45deg, transparent 50%, $grey-border 50%),
      linear-gradient(135deg, $grey-border 50%, transparent 50%);
    border-color: $grey-border;
    color: $grey;
    &:after,
    &:before {
      cursor: not-allowed;
    }
    &:after {
      background-color: $grey-light;
      border-color: $grey-border;
    }
    &:active,
    &:focus,
    &:hover {
      background-image: linear-gradient(
          45deg,
          transparent 50%,
          $grey-border 50%
        ),
        linear-gradient(135deg, $grey-border 50%, transparent 50%);
      border-color: $grey-border;
    }
    // ...but, again; not on multiselect list items.
    &[multiple] {
      background: $grey-light;
    }
  }
}

// Disabled:
fieldset:disabled,
select.form-control:disabled {
  cursor: not-allowed; // account for if fieldset is .disabled
}

// Tables:
.table {
  & > tbody > tr:nth-of-type(even) {
    background-color: $grey-light;
  }
  & > tbody,
  & > tfoot,
  & > thead {
    & > tr {
      & > td,
      & > th {
        border-top: 1px solid $grey-light;
        padding: 1em;
      }
      & > td {
        border-bottom: solid 1px $grey-border;
      }
    }
  }
  & > thead > tr > th {
    border-bottom: solid 2px $grey;
    vertical-align: bottom;
  }
}
.table-bordered {
  border: 1px solid $grey-light;
  & > tbody,
  & > tfoot,
  & > thead {
    & > tr {
      & > td,
      & > th {
        border: 1px solid $grey-light;
      }
    }
  }
}

// Images:
.img-circle,
.img-rounded,
.img-thumbnail {
  border: 1px solid $grey-light;
}
.img-rounded,
.img-thumbnail {
  border-radius: $radius;
}

// Thumbnails:
.thumbnail {
  border: 1px solid $grey-light;
  padding: 0;
  .caption {
    padding: 9px 13px;
    .meta,
    small,
    time {
      display: inline-block;
      padding: 0.8em 0;
      @extend .meta;
    }
  }
}

// Misc. ".meta" text:
.meta {
  color: $grey;
}

// Media:
.media {
  margin-bottom: 2.5em;
}
.media-heading {
  margin-bottom: 10px;
}
.media-left {
  a {
    border-bottom: 0;
    display: inline-block;
  }
}

// Panels / accordions / collapsible navigation:
.panel {
  .panel-footer,
  .panel-heading {
    background-color: $grey-light;
  }
  .panel-heading {
    border-top-left-radius: $radius-small;
    border-top-right-radius: $radius-small;
    color: #fff;
    padding: 0;
    .panel-title {
      font-size: 100%;
      padding: 1.5em 1em;
    }
    a.panel-title {
      border-bottom: 0; // Yes, that's right - the a tag is the title. Heading needs to be nested unless http://caniuse.com/#feat=css-has or silimar car be used 😒
      display: block;
      &:active,
      &:focus,
      &:hover {
        background-color: $grey-border;
        &:after {
          color: $primary;
        }
        & > * {
          border-bottom: solid 1px $primary-highlight;
          padding-bottom: 2px;
        }
      }
      &:after {
        color: $primary-darker;
        content: "\e113";
        // ">" symbol
        float: right;
        font-family: 'Glyphicons Halflings';
        transition: all 0.2s;
      }
      &.collapsed:after {
        transform: rotate(180deg);
      }
      & > * {
        display: inline; // Stop the h4 etc from stuffing up the ">" symbol location
      }
    }
  }
  .panel-body {
    padding: 1.5em 1em;
  }
  .panel-footer {
    border-bottom-left-radius: $radius-small;
    border-bottom-right-radius: $radius-small;
    border-top: 1px solid $grey-border;
    padding: 1.2em 1em;
  }
}

// Panel types:
.panel-default {
  border-color: $grey-border;
  .panel-heading {
    border: 0;
    color: $grey-dark;
  }
  .panel-body {
    border-top: 1px solid $grey-border !important;
  }
}
.panel-primary {
  border-color: $primary;
  .panel-heading {
    background-color: $primary;
    border-color: $primary;
  }
}
.panel-success {
  border-color: $success;
  .panel-heading {
    background-color: $success;
    border-color: $success;
  }
}
.panel-info {
  border-color: $info;
  .panel-heading {
    background-color: $info;
    border-color: $info;
    color: $grey-dark; // for a11y
  }
}
.panel-warning {
  border-color: $warning;
  .panel-heading {
    background-color: $warning;
    border-color: $warning;
    color: $grey-dark; // for a11y
  }
}
.panel-danger {
  border-color: $danger;
  .panel-heading {
    background-color: $danger;
    border-color: $danger;
  }
}

// List groups:
.list-group {
  border-radius: 0;
}
.list-group-item {
  border: 1px solid $grey-border;
  border-left: 0;
  border-right: 0;
  &:first-child,
  &:last-child {
    border-radius: 0;
  }
  &.active {
    background-color: $primary;
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    margin-top: 10px;
  }
  .list-group-item-text {
    margin-bottom: 10px;
  }
}
.list-group-item-heading {
  margin-bottom: 10px;
}

// Dropdown Menus:
.dropdown-menu {
  margin-bottom: 1.5em;
  li {
    margin: 0;
    padding: 0;
    a {
      color: $primary-dark;
      margin: 0;
      padding: 1em;
      &:active,
      &:focus,
      &:hover {
        color: $grey-dark;
      }
    }
    &.dropdown-header {
      color: $grey-dark;
      padding: 15px 20px 5px 0.5em;
    }
  }
}

// Caret:
.caret {
  border-top-color: $primary-dark;
}

// Code snippets:
code,
pre {
  background-color: $grey-light;
}
kbd {
  background-color: $grey-light;
  border: solid 1px $primary-bright;
  border-radius: 3px;
  box-shadow: 0 1px 0 0 $primary-bright;
  color: $primary;
  display: inline-block;
  font-size: 87.5%;
  margin: 1px 0.4em;
  padding: 0 0.8em;
  text-align: center;

  kbd {
    border: 0;
  }
}

// Slider/Carousel:
.carousel {
  .carousel-control {
    border-bottom: 0;
    &:active,
    &:focus,
    &:hover {
      background-color: transparent;
    }
  }
}

// Popovers:
.popover {
  border-radius: $radius;
  &.right > .arrow {
    left: -11px;
  }
  .popover-title {
    background-color: $grey-light;
    color: $primary-dark;
    font-weight: 500;
  }
}

// Tooltips:
.tooltip {
  border-radius: $radius;
  min-width: 10em;
}
